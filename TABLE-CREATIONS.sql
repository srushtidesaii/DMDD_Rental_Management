                                -- CREATING TABLES/DROPPING AND CREATING TABLES AGAIN

SET SERVEROUTPUT ON;
DECLARE
nCount NUMBER;

BEGIN

                                -- CREATING TABLES/DROPPING AND CREATING TABLE UTILITY
SELECT count(*) into nCount FROM user_tables where table_name = 'UTILITY';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('Utility table already exists. Hence, dropping the current table and creating a new table');
    EXECUTE IMMEDIATE 'DROP TABLE UTILITY CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'CREATE TABLE UTILITY (UTILITY_ID VARCHAR2(50), UTILITY_NAME VARCHAR(50) NOT NULL, 
    PRIMARY KEY(UTILITY_ID))';
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE UTILITY (UTILITY_ID VARCHAR2(50), UTILITY_NAME VARCHAR(50) NOT NULL, 
    PRIMARY KEY(UTILITY_ID))';
END IF;

                                -- CREATING TABLES/DROPPING AND CREATING TABLE LANDLORD
SELECT count(*) into nCount FROM user_tables where table_name = 'LANDLORD';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('Landlord table already exists. Hence, dropping the current table and creating a new table');
    EXECUTE IMMEDIATE 'DROP TABLE LANDLORD CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'CREATE TABLE LANDLORD 
        (LANDLORD_ID Number(38) PRIMARY KEY, LANDLORD_FIRST_NAME VARCHAR(50), LANDLORD_LAST_NAME VARCHAR(50),
        LANDLORD_CONTACT NUMBER(38), LANDLORD_EMAIL VARCHAR(50), LANDLORD_APARTMENT_NUMBER VARCHAR2(50), LANDLORD_STREET_NAME VARCHAR2(50), LANDLORD_ZIPCODE NUMBER(38))';
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE LANDLORD 
        (LANDLORD_ID Number(38) PRIMARY KEY, LANDLORD_FIRST_NAME VARCHAR(50), LANDLORD_LAST_NAME VARCHAR(50),
        LANDLORD_CONTACT NUMBER(38), LANDLORD_EMAIL VARCHAR(50), LANDLORD_APARTMENT_NUMBER VARCHAR2(50), LANDLORD_STREET_NAME VARCHAR2(50), LANDLORD_ZIPCODE NUMBER(38))';
END IF;

                                -- CREATING TABLES/DROPPING AND CREATING TABLE APARTMENT_TYPE
SELECT count(*) into nCount FROM user_tables where table_name = 'APARTMENT_TYPE';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('Apartment_type table already exists. Hence, dropping the current table and creating a new table');
    EXECUTE IMMEDIATE 'DROP TABLE APARTMENT_TYPE CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'CREATE TABLE APARTMENT_TYPE 
        (APARTMENT_TYPE_ID Number(38) PRIMARY KEY, LOCALITY VARCHAR2(100), APARTMENT_TYPE VARCHAR2(50), NUMBER_OF_ROOMS  NUMBER(6,2), NUMBER_OF_BATHS NUMBER(6,2))';
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE APARTMENT_TYPE 
        (APARTMENT_TYPE_ID Number(38) PRIMARY KEY, LOCALITY VARCHAR2(100), APARTMENT_TYPE VARCHAR2(50), NUMBER_OF_ROOMS  NUMBER(6,2), NUMBER_OF_BATHS NUMBER(6,2))';
END IF;

                                -- CREATING TABLES/DROPPING AND CREATING TABLE APARTMENT
SELECT count(*) into nCount FROM user_tables where table_name = 'APARTMENT';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('Apartment table already exists. Hence, dropping the current table and creating a new table');
    EXECUTE IMMEDIATE 'DROP TABLE APARTMENT CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'CREATE TABLE APARTMENT (APARTMENT_ID Number(38), LANDLORD_ID Number(38) NOT NULL, APARTMENT_TYPE_ID Number(38) NOT NULL, 
        APARTMENT_NUMBER VARCHAR2(50), APARTMENT_STREET_NAME VARCHAR2(50), APARTMENT_NEIGHBOURHOOD VARCHAR2(50), APARTMENT_ZIPCODE NUMBER(38), TOTAL_AREA NUMBER(38),  
        MONTHLY_RENT NUMBER(38), APARTMENT_STATUS VARCHAR2(50), PRIMARY KEY(APARTMENT_ID), CONSTRAINT F1 FOREIGN KEY(LANDLORD_ID) REFERENCES LANDLORD(LANDLORD_ID), 
        CONSTRAINT F2 FOREIGN KEY(APARTMENT_TYPE_ID) REFERENCES APARTMENT_TYPE(APARTMENT_TYPE_ID))';
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE APARTMENT (APARTMENT_ID Number(38), LANDLORD_ID Number(38) NOT NULL, APARTMENT_TYPE_ID Number(38) NOT NULL, 
        APARTMENT_NUMBER VARCHAR2(50), APARTMENT_STREET_NAME VARCHAR2(50), APARTMENT_NEIGHBOURHOOD VARCHAR2(50), APARTMENT_ZIPCODE NUMBER(38), TOTAL_AREA NUMBER(38),  
        MONTHLY_RENT NUMBER(38), APARTMENT_STATUS VARCHAR2(50), PRIMARY KEY(APARTMENT_ID), CONSTRAINT F1 FOREIGN KEY(LANDLORD_ID) REFERENCES LANDLORD(LANDLORD_ID), 
        CONSTRAINT F2 FOREIGN KEY(APARTMENT_TYPE_ID) REFERENCES APARTMENT_TYPE(APARTMENT_TYPE_ID))';
END IF;

                                -- CREATING TABLES/DROPPING AND CREATING TABLE APARTMENT_UTILITY
SELECT count(*) into nCount FROM user_tables where table_name = 'APARTMENT_UTILITY';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('Apartment_utility table already exists. Hence, dropping the current table and creating a new table');
    EXECUTE IMMEDIATE 'DROP TABLE APARTMENT_UTILITY CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'CREATE TABLE APARTMENT_UTILITY (UTILITY_ID VARCHAR2(50) NOT NULL, APARTMENT_ID Number(38) NOT NULL,
        IS_INCLUDED_IN_RENT VARCHAR(30), CONSTRAINT F9 FOREIGN KEY(UTILITY_ID) REFERENCES UTILITY(UTILITY_ID),
        CONSTRAINT F8 FOREIGN KEY(APARTMENT_ID) REFERENCES APARTMENT(APARTMENT_ID))';
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE APARTMENT_UTILITY (UTILITY_ID VARCHAR2(50) NOT NULL, APARTMENT_ID Number(38) NOT NULL,
        IS_INCLUDED_IN_RENT VARCHAR(30), CONSTRAINT F9 FOREIGN KEY(UTILITY_ID) REFERENCES UTILITY(UTILITY_ID),
        CONSTRAINT F8 FOREIGN KEY(APARTMENT_ID) REFERENCES APARTMENT(APARTMENT_ID))';
END IF;

                                -- CREATING TABLES/DROPPING AND CREATING TABLE EMPLOYEE_ROLES
SELECT count(*) into nCount FROM user_tables where table_name = 'EMPLOYEE_ROLES';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('Employee_roles table already exists. Hence, dropping the current table and creating a new table');
    EXECUTE IMMEDIATE 'DROP TABLE EMPLOYEE_ROLES CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'CREATE TABLE EMPLOYEE_ROLES (ROLE_ID VARCHAR2(10) PRIMARY KEY, ROLE_TYPE VARCHAR(50))';
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE EMPLOYEE_ROLES (ROLE_ID VARCHAR2(10) PRIMARY KEY, ROLE_TYPE VARCHAR(50))';
END IF;

                                -- CREATING TABLES/DROPPING AND CREATING TABLE EMPLOYEE
SELECT count(*) into nCount FROM user_tables where table_name = 'EMPLOYEE';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('Employee table already exists. Hence, dropping the current table and creating a new table');
    EXECUTE IMMEDIATE 'DROP TABLE EMPLOYEE CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'CREATE TABLE EMPLOYEE (EMPLOYEE_ID VARCHAR2(10) PRIMARY KEY, ROLE_ID VARCHAR2(10) not null, EMPLOYEE_FIRST_NAME VARCHAR(50), EMPLOYEE_LAST_NAME VARCHAR(50),
        EMPLOYEE_CONTACT VARCHAR2(20), EMPLOYEE_EMAIL VARCHAR(50), EMPLOYEE_APARTMENT_NUMBER VARCHAR(50), EMPLOYEE_STREET_NAME VARCHAR(50), 
        EMPLOYEE_NEIGHBOURHOOD VARCHAR(50), EMPLOYEE_ZIPCODE  VARCHAR(50),CONSTRAINT F5 FOREIGN KEY(ROLE_ID) REFERENCES EMPLOYEE_ROLES(ROLE_ID))';
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE EMPLOYEE (EMPLOYEE_ID VARCHAR2(10) PRIMARY KEY, ROLE_ID VARCHAR2(10) not null, EMPLOYEE_FIRST_NAME VARCHAR(50), EMPLOYEE_LAST_NAME VARCHAR(50),
        EMPLOYEE_CONTACT VARCHAR2(20), EMPLOYEE_EMAIL VARCHAR(50), EMPLOYEE_APARTMENT_NUMBER VARCHAR(50), EMPLOYEE_STREET_NAME VARCHAR(50), 
        EMPLOYEE_NEIGHBOURHOOD VARCHAR(50), EMPLOYEE_ZIPCODE  VARCHAR(50),CONSTRAINT F5 FOREIGN KEY(ROLE_ID) REFERENCES EMPLOYEE_ROLES(ROLE_ID))';
END IF;

                                -- CREATING TABLES/DROPPING AND CREATING TABLE EMPLOYEE_APARTMENT
SELECT count(*) into nCount FROM user_tables where table_name = 'EMPLOYEE_APARTMENT';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('Employee_apartment table already exists. Hence, dropping the current table and creating a new table');
    EXECUTE IMMEDIATE 'DROP TABLE EMPLOYEE_APARTMENT CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'CREATE TABLE EMPLOYEE_APARTMENT (APARTMENT_ID Number(38) not null, EMPLOYEE_ID VARCHAR2(10) not null, CONSTRAINT F11 FOREIGN KEY(APARTMENT_ID) REFERENCES APARTMENT(APARTMENT_ID),
        CONSTRAINT F12 FOREIGN KEY(EMPLOYEE_ID) REFERENCES EMPLOYEE(EMPLOYEE_ID))';
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE EMPLOYEE_APARTMENT (APARTMENT_ID Number(38) not null, EMPLOYEE_ID VARCHAR2(10) not null, CONSTRAINT F11 FOREIGN KEY(APARTMENT_ID) REFERENCES APARTMENT(APARTMENT_ID),
        CONSTRAINT F12 FOREIGN KEY(EMPLOYEE_ID) REFERENCES EMPLOYEE(EMPLOYEE_ID))';
END IF;

                                -- CREATING TABLES/DROPPING AND CREATING TABLE LEASE_DETAILS
SELECT count(*) into nCount FROM user_tables where table_name = 'LEASE_DETAILS';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('Lease_details table already exists. Hence, dropping the current table and creating a new table');
    EXECUTE IMMEDIATE 'DROP TABLE LEASE_DETAILS CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'CREATE TABLE LEASE_DETAILS (LEASE_ID  VARCHAR2(10) PRIMARY KEY, APARTMENT_ID Number(38) not null, 
        start_date DATE, end_date DATE, Members_on_lease NUMBER(38), lease_status varchar(50), 
        CONSTRAINT F6 FOREIGN KEY(APARTMENT_ID) references APARTMENT(APARTMENT_ID))';
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE LEASE_DETAILS (LEASE_ID  VARCHAR2(10) PRIMARY KEY, APARTMENT_ID Number(38) not null, 
        start_date DATE, end_date DATE, Members_on_lease NUMBER(38), lease_status varchar(50), 
        CONSTRAINT F6 FOREIGN KEY(APARTMENT_ID) references APARTMENT(APARTMENT_ID))';
END IF;

                                -- CREATING TABLES/DROPPING AND CREATING TABLE CUSTOMERS
SELECT count(*) into nCount FROM user_tables where table_name = 'CUSTOMERS';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('Customers table already exists. Hence, dropping the current table and creating a new table');
    EXECUTE IMMEDIATE 'DROP TABLE CUSTOMERS CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'CREATE TABLE CUSTOMERS (CUSTOMER_ID VARCHAR2(10) PRIMARY KEY, LEASE_ID VARCHAR2(10) NOT NULL, CUSTOMER_FIRST_NAME VARCHAR2(50), CUSTOMER_LAST_NAME VARCHAR2(50), CUSTOMER_CONTACT VARCHAR2(20), 
    CUSTOMER_EMAIL VARCHAR2(50),CUSTOMER_APARTMENT_NUMBER VARCHAR2(50), CUSTOMER_STREET_NUMBER VARCHAR2(50), CUSTOMER_STREET_NAME VARCHAR2(50), CUSTOMER_NEIGHBOURHOOD VARCHAR2(50),
    CUSTOMER_CITY VARCHAR2(50), CUSTOMER_STATE VARCHAR2(50), CUSTOMER_COUNTRY VARCHAR2(50), CUSTOMER_ZIPCODE NUMBER(38),
    CONSTRAINT F10 FOREIGN KEY(LEASE_ID) references LEASE_DETAILS(LEASE_ID))';
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE CUSTOMERS (CUSTOMER_ID VARCHAR2(10) PRIMARY KEY, LEASE_ID VARCHAR2(10), CUSTOMER_FIRST_NAME VARCHAR2(50), CUSTOMER_LAST_NAME VARCHAR2(50), CUSTOMER_CONTACT VARCHAR2(20), 
    CUSTOMER_EMAIL VARCHAR2(50),CUSTOMER_APARTMENT_NUMBER VARCHAR2(50), CUSTOMER_STREET_NUMBER VARCHAR2(50), CUSTOMER_STREET_NAME VARCHAR2(50), CUSTOMER_NEIGHBOURHOOD VARCHAR2(50),
    CUSTOMER_CITY VARCHAR2(50), CUSTOMER_STATE VARCHAR2(50), CUSTOMER_COUNTRY VARCHAR2(50), CUSTOMER_ZIPCODE NUMBER(38),
    CONSTRAINT F10 FOREIGN KEY(LEASE_ID) references LEASE_DETAILS(LEASE_ID))';
END IF;

                                -- CREATING TABLES/DROPPING AND CREATING TABLE PAYMENT
SELECT count(*) into nCount FROM user_tables where table_name = 'PAYMENT';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('Payment table already exists. Hence, dropping the current table and creating a new table');
    EXECUTE IMMEDIATE 'DROP TABLE PAYMENT CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'CREATE TABLE PAYMENT (PAYMENT_ID VARCHAR2(10) PRIMARY KEY, LEASE_ID VARCHAR2(10) NOT NULL, AMOUNT_TRANSFERRED NUMBER(38), 
    TRANSACTION_DATE DATE, PAYMENT_TYPE VARCHAR2(50), PAYEE_FIRST_NAME VARCHAR2(50), PAYEE_LAST_NAME VARCHAR2(50), CONSTRAINT F7 FOREIGN KEY(LEASE_ID) references LEASE_DETAILS(LEASE_ID))';
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE PAYMENT (PAYMENT_ID VARCHAR2(10) PRIMARY KEY, LEASE_ID VARCHAR2(10) NOT NULL, AMOUNT_TRANSFERRED NUMBER(38), 
    TRANSACTION_DATE DATE, PAYMENT_TYPE VARCHAR2(50), PAYEE_FIRST_NAME VARCHAR2(50), PAYEE_LAST_NAME VARCHAR2(50), CONSTRAINT F7 FOREIGN KEY(LEASE_ID) references LEASE_DETAILS(LEASE_ID))';
END IF;

                                -- CREATING TABLES/DROPPING AND CREATING TABLE MAINTENANCE_REQUESTS
SELECT count(*) into nCount FROM user_tables where table_name = 'MAINTENANCE_REQUESTS';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('Maintenance_requests table already exists. Hence, dropping the current table and creating a new table');
    EXECUTE IMMEDIATE 'DROP TABLE MAINTENANCE_REQUESTS CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'CREATE TABLE MAINTENANCE_REQUESTS (REQUEST_ID VARCHAR2(10) PRIMARY KEY, APARTMENT_ID Number(38) NOT NULL, EMPLOYEE_ID VARCHAR2(10) NOT NULL, REQUEST_DATE DATE, 
    REQUEST_CLOSED_DATE DATE, MAINTENANCE_STATUS VARCHAR(50), 
    CONSTRAINT F3 FOREIGN KEY(APARTMENT_ID) REFERENCES APARTMENT(APARTMENT_ID), CONSTRAINT F4 FOREIGN KEY(EMPLOYEE_ID) REFERENCES EMPLOYEE(EMPLOYEE_ID))';
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE MAINTENANCE_REQUESTS (REQUEST_ID VARCHAR2(10) PRIMARY KEY, APARTMENT_ID Number(38) NOT NULL, EMPLOYEE_ID VARCHAR2(10) NOT NULL, REQUEST_DATE DATE, 
    REQUEST_CLOSED_DATE DATE, MAINTENANCE_STATUS VARCHAR(50), 
    CONSTRAINT F3 FOREIGN KEY(APARTMENT_ID) REFERENCES APARTMENT(APARTMENT_ID), CONSTRAINT F4 FOREIGN KEY(EMPLOYEE_ID) REFERENCES EMPLOYEE(EMPLOYEE_ID))';
END IF;
END;
/